jobs:
  build:
    docker:
      - image: circleci/python:3.10
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
            sudo apt-get update
            sudo apt-get install -y gconf-service libasound2 libatk1.0-0 libpango-1.0-0 
            sudo apt-get install -y libcairo2 libcups2 libfontconfig1
            sudo apt-get install -y libgdk-pixbuf2.0-0 libgtk-3-0 libnspr4
            sudo apt-get install -y libxss1 fonts-liberation libnss3 lsb-release xdg-utils
            sudo wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
            sudo dpkg -i google-chrome-stable_current_amd64.deb
            sudo apt-get -fy install
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"

  test:
    docker:
      - image: circleci/python:3.10
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Running tests
          command: |
            . venv/bin/activate
            mkdir test-results
            pytest --junitxml=test-results/junit.xml
            python manage.py test
      - store_artifacts:
          path: test-reports/
          destination: python_app
      - store_test_results:
          path: test-results

  coverage:
    docker:
      - image: circleci/python:3.10
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name : Coverage 
          command: |
            python -m pip install -r requirements.txt
            coverage run -m pytest
            coverage report
            coverage html
      - store_artifacts:
          path: htmlcov
            

workflows:
  version: 2
  build_test_and_coverage:
    jobs:
      - build
      - test:
        requires:
        - build
      - coverage
        requires:
        - test